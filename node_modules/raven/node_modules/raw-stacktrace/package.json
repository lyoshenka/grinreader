{
  "author": {
    "name": "Bill Casarin",
    "email": "bill@casarin.ca"
  },
  "name": "raw-stacktrace",
  "description": "Emit raw stacktraces when errors are thrown",
  "version": "0.0.2",
  "repository": {
    "url": ""
  },
  "main": "index.js",
  "engines": {
    "node": "~0.6.8"
  },
  "dependencies": {
    "traceback": ">=0.3.0 && < 0.4",
    "underscore": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "\n# node-raw-stacktraces\n\nGet raw stack traces when errors are thrown.\n\nOptionally customize the format of stack traces.\n\n## Example\n\n```js\nvar raw = require('raw-stacktrace');\nvar traces = raw();\n\ntraces.on(\"trace\", function(err, callsites){\n  console.log(callsites[0]);\n});\n\ntraces.formatter(function(err, callsites){\n  return \"custom stack trace output\";\n});\n\n(function testError(){ \n  throw new Error(\"test\");\n}).bind({ context: \"someContext\" })();\n```\n\n### Output\n\n```js\n{ this: { context: 'someContext' },\n  type: 'Object',\n  isTop: false,\n  isEval: false,\n  origin: '/Users/jb55/src/coffeescript/node-raw-stacktrace/example.js',\n  script: '/Users/jb55/src/coffeescript/node-raw-stacktrace/example.js',\n  fun: [Function: testError],\n  name: 'testError',\n  method: null,\n  path: '/Users/jb55/src/coffeescript/node-raw-stacktrace/example.js',\n  line: 11,\n  col: 9,\n  isNative: false,\n  pos: 277,\n  isCtor: false,\n  file: 'example.js',\n  toJSON: [Function: toJSON] }\ncustom stack trace output\n```\n\n## Adding callsites to the Error object\n\n```js\nvar raw = require('raw-stacktrace');\nvar traces = raw();\n\ntraces.on(\"trace\", function(err, callsites){\n  err.callsites = callsites;\n});\n```\n\n\n",
  "readmeFilename": "Readme.md",
  "_id": "raw-stacktrace@0.0.2",
  "dist": {
    "shasum": "7d0abf32542bbb4f68d32cdcdac5a0ab2f9c1c51"
  },
  "_from": "raw-stacktrace@0.0.2",
  "_resolved": "https://registry.npmjs.org/raw-stacktrace/-/raw-stacktrace-0.0.2.tgz"
}
